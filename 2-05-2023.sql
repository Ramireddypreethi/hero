CREATE TABLE CAR(
CAR_NO INT ,CAR_NAME VARCHAR(40),CAR_PRICE INT,CAR_QUANTITY INT);

INSERT INTO CAR VALUES(122,"TESLA",20000,21),(132,"BMW",22000,2),(145,"SHIFT",40000,5),(120,"SAFARI",32000,4);

INSERT INTO CAR VALUES(126,"TES",20000,28);

INSERT INTO CAR VALUES(119,"KIA",22000,9);

SELECT *FROM CAR;

SELECT COUNT(CAR_NAME) AS CARS,CAR_PRICE FROM CAR GROUP BY CAR_PRICE;-- TO SEE HOW MANY HAVE SAME CAR PRICE WE COUNT
-- --------------------------------------------------------------------------------------------
-- EXAMPLES ON HAVING CLAUSE

SELECT COUNT(CAR_NAME) FROM CAR GROUP BY CAR_PRICE HAVING CAR_PRICE>12000; -- IF WE WANT TO GET OUTPUT BASED ON CAR_PRICE WE USE "GROUP BY" AND BASED ON CONDITION WE USE "HAVING"
SELECT COUNT(CAR_NAME) FROM CAR GROUP BY CAR_PRICE>12000;
SELECT COUNT(*) FROM CAR GROUP BY CAR_PRICE HAVING CAR_PRICE>20000;

-- --------------------------------------------------------------------
CREATE TABLE VISIT(
ENTRY_DATE DATE,
PRICE INT,
DURATION int
);

INSERT INTO VISIT VALUES('2023-05-1',1000,12),('2023-05-1',1200,12),('2023-05-26',1400,13),('2023-05-4',1500,19),('2023-05-3',1000,12),('2023-05-1',1009,14);
INSERT INTO VISIT VALUES('2023-07-1',1000,12),('2023-06-1',1200,12),('2023-09-26',1400,13),('2023-02-4',1500,19);
INSERT INTO VISIT VALUES('2022-07-1',1000,12);
SELECT * FROM VISIT;

SELECT ENTRY_DATE,COUNT(*) FROM VISIT GROUP BY ENTRY_DATE;

-- EXTRACT FUNCTION: WE CAN EXTRACT THE YEAR OR MONTH FROM DATE
-- ROUND FUNCTION IS USED TO ROUND FIGURE THE NUMBER.iN THIS ROUND(AVG(PRICE,2)) HERE 2 REPRESENTS UPTO 2 DECIMAL POINTS
SELECT EXTRACT(YEAR FROM ENTRY_DATE)  AS YEAR,
EXTRACT(MONTH FROM ENTRY_DATE) AS MONTH,
ROUND(AVG(PRICE),2) FROM VISIT GROUP BY EXTRACT(YEAR FROM ENTRY_DATE),EXTRACT(MONTH FROM ENTRY_DATE);-- PRICE WILL ROUND UP TO 2 DECIMAL

SELECT EXTRACT(YEAR FROM ENTRY_DATE)  AS YEAR,
EXTRACT(MONTH FROM ENTRY_DATE) AS MONTH,
ROUND(AVG(PRICE),4) FROM VISIT GROUP BY EXTRACT(YEAR FROM ENTRY_DATE),EXTRACT(MONTH FROM ENTRY_DATE);-- PRICE WILL ROUND UP TO 2 DECIMAL

SELECT EXTRACT(YEAR FROM ENTRY_DATE) AS YEAR,
EXTRACT(MONTH FROM ENTRY_DATE) AS MONTH,EXTRACT(DAY FROM ENTRY_DATE) AS DAY,
ROUND(AVG(PRICE),2) FROM VISIT 
GROUP BY EXTRACT(YEAR FROM ENTRY_DATE),EXTRACT(MONTH FROM ENTRY_DATE),EXTRACT(DAY FROM ENTRY_DATE)
ORDER BY EXTRACT(YEAR FROM ENTRY_DATE),EXTRACT(MONTH FROM ENTRY_DATE);-- PRICE WILL ROUND UP TO 2 DECIMAL

SELECT ENTRY_DATE,ROUND(AVG(PRICE),5) AS AVG_PRICE FROM VISIT GROUP BY ENTRY_DATE HAVING COUNT(*) >0 ORDER BY ENTRY_DATE;-- ENTRY_DATE SHOULD BE MORE THAN 1 IN ORDER,HERE ORDER IS TAKEN AS "THE DATE WHICH IS ENTERED FIRST"

SELECT ENTRY_DATE,ROUND(AVG(PRICE),5) AS AVG_PRICE,COUNT(ENTRY_DATE) FROM VISIT GROUP BY ENTRY_DATE HAVING COUNT(*)>0;
SELECT * FROM VISIT;
SELECT COUNT(ENTRY_DATE),ENTRY_DATE FROM VISIT GROUP BY ENTRY_DATE;

-- IF DURATION IS MORE THAN 20 THEN ONLY DO AVG
SELECT ENTRY_DATE,ROUND(AVG(PRICE),2) AS AVG_PRICE FROM VISIT WHERE DURATION >10
GROUP BY ENTRY_DATE HAVING COUNT(*)>1 ORDER BY ENTRY_DATE;
-- ----------------------------------------------------------------------------------------
CREATE TABLE EMPLOYEE(
EMP_ID INT,NAME VARCHAR(25),AGE INT,COUNTRY VARCHAR(30));

INSERT INTO EMPLOYEE VALUES(101,"RAM",23,"INDIA"),(102,"RAMESH",25,"PAKISTAN"),(103,"SITA",21,"SRILANKA"),(104,"RAGHU",23,"INDIA");

SELECT * FROM EMPLOYEE;

SELECT COUNT(COUNTRY) AS COUN_NUM,COUNTRY FROM EMPLOYEE GROUP BY COUNTRY HAVING COUNT(COUNTRY)>=2;

SELECT COUNTRY,COUNT(COUNTRY) FROM EMPLOYEE GROUP BY COUNTRY HAVING MAX(AGE)>=23;
-- ----------------------------------------------------------------------------------------
CREATE TABLE MANAGER(
ID INT ,NAME VARCHAR(20),GENDER VARCHAR(20),SALARY INT);

CREATE TABLE MANAGER1(
ID INT ,NAME VARCHAR(20),GENDER VARCHAR(20),AGE INT,SALARY INT);

INSERT INTO MANAGER1 VALUES(201,"PREETHI","F",20,12000),(202,"VARUN","M",20,13000),(203,"CHANDHANA","F",30,12500),(204,"RISHI","M",30,12000),(205,"SREEJA","F",30,14000),(206,"HITESH","M",25,13300);

-- FIND OUT SUM OF SALARY GREATER THAN 12000
SELECT NAME,SUM(SALARY) AS T_SALARY FROM MANAGER1 GROUP BY NAME HAVING SUM(SALARY)>12000 ORDER BY NAME; 

SELECT SUM(SALARY) AS T_SALARY,SALARY FROM MANAGER1 GROUP BY SALARY HAVING SUM(SALARY)>12000 ORDER BY SALARY;-- DOUBT 

SELECT AGE FROM MANAGER1 GROUP BY AGE HAVING COUNT(AGE)>2;

SELECT GENDER,MAX(SALARY) AS MAX_SALARY FROM MANAGER1 GROUP BY GENDER HAVING MAX(SALARY)<15000;
-- --------------------------------------------------------------------------------
-- 1)
DELIMITER //
CREATE PROCEDURE GetManagerInfo() 
BEGIN
select * from MANAGER1;
END //

CALL GetManagerInfo()

-- 2)
DELIMITER //
CREATE PROCEDURE GetManagerAge() 
BEGIN
select * from MANAGER1 WHERE AGE=20;
END //
CALL GetManagerAge() 

-- 3)

SELECT NAME FROM MANAGER1 ORDER BY RAND() LIMIT 2;-- IT GIVES  RANDOM NAME